Point(
    "Program",
    Graph(
        [
            Point(
                "bob",
                Binary(
                    Select,
                    Binary(
                        Parent,
                        Binary(
                            Select,
                            Binary(
                                Select,
                                Ref(
                                    "duck",
                                ),
                                Ref(
                                    "child",
                                ),
                            ),
                            Ref(
                                "monkey",
                            ),
                        ),
                        Ref(
                            "parent",
                        ),
                    ),
                    Ref(
                        "child",
                    ),
                ),
            ),
            Point(
                "bob",
                Binary(
                    Select,
                    Ref(
                        "duck",
                    ),
                    Tuple(
                        [
                            Ref(
                                "hello",
                            ),
                            Ref(
                                "hi",
                            ),
                            Ref(
                                "there",
                            ),
                        ],
                    ),
                ),
            ),
            Point(
                "a",
                Unary(
                    Not,
                    Number(
                        "10",
                    ),
                ),
            ),
            Point(
                "quad",
                Graph(
                    [
                        Point(
                            "a",
                            Number(
                                "0",
                            ),
                        ),
                        Point(
                            "b",
                            Number(
                                "0",
                            ),
                        ),
                        Point(
                            "c",
                            Number(
                                "0",
                            ),
                        ),
                        Point(
                            "discriminant",
                            Binary(
                                Sub,
                                Binary(
                                    Exp,
                                    Ref(
                                        "b",
                                    ),
                                    Number(
                                        "2",
                                    ),
                                ),
                                Binary(
                                    Mul,
                                    Binary(
                                        Mul,
                                        Number(
                                            "4",
                                        ),
                                        Ref(
                                            "a",
                                        ),
                                    ),
                                    Ref(
                                        "c",
                                    ),
                                ),
                            ),
                        ),
                        Point(
                            "rooted",
                            Rep(
                                Ref(
                                    "sqrt",
                                ),
                                Graph(
                                    [
                                        Point(
                                            "x",
                                            Ref(
                                                "discriminant",
                                            ),
                                        ),
                                    ],
                                ),
                            ),
                        ),
                        Point(
                            "denominator",
                            Binary(
                                Mul,
                                Number(
                                    "2",
                                ),
                                Ref(
                                    "a",
                                ),
                            ),
                        ),
                        Point(
                            "neg",
                            Binary(
                                Div,
                                Binary(
                                    Sub,
                                    Unary(
                                        Sub,
                                        Ref(
                                            "b",
                                        ),
                                    ),
                                    Ref(
                                        "rooted",
                                    ),
                                ),
                                Ref(
                                    "denominator",
                                ),
                            ),
                        ),
                        Point(
                            "pos",
                            Binary(
                                Div,
                                Binary(
                                    Add,
                                    Unary(
                                        Sub,
                                        Ref(
                                            "b",
                                        ),
                                    ),
                                    Ref(
                                        "rooted",
                                    ),
                                ),
                                Ref(
                                    "denominator",
                                ),
                            ),
                        ),
                    ],
                ),
            ),
            Point(
                "result",
                Rep(
                    Ref(
                        "Math",
                    ),
                    Graph(
                        [
                            Point(
                                "return",
                                Binary(
                                    Add,
                                    Ref(
                                        "a",
                                    ),
                                    Ref(
                                        "b",
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Point(
                "add",
                Graph(
                    [
                        Point(
                            "a",
                            Ref(
                                "a",
                            ),
                        ),
                        Point(
                            "b",
                            Number(
                                "0",
                            ),
                        ),
                        Point(
                            "return",
                            Binary(
                                Add,
                                Ref(
                                    "a",
                                ),
                                Ref(
                                    "b",
                                ),
                            ),
                        ),
                    ],
                ),
            ),
            Point(
                "a",
                Binary(
                    Or,
                    Binary(
                        And,
                        Binary(
                            Add,
                            Binary(
                                Div,
                                Unary(
                                    Add,
                                    Number(
                                        "1",
                                    ),
                                ),
                                Number(
                                    "4",
                                ),
                            ),
                            Binary(
                                Mul,
                                Number(
                                    "8",
                                ),
                                Binary(
                                    Exp,
                                    Number(
                                        "5",
                                    ),
                                    Number(
                                        "2",
                                    ),
                                ),
                            ),
                        ),
                        Binary(
                            Eq,
                            Binary(
                                Le,
                                Number(
                                    "2",
                                ),
                                Unary(
                                    Not,
                                    Number(
                                        "1",
                                    ),
                                ),
                            ),
                            Binary(
                                Add,
                                Binary(
                                    Exp,
                                    Number(
                                        "3",
                                    ),
                                    Number(
                                        "3",
                                    ),
                                ),
                                Number(
                                    "3",
                                ),
                            ),
                        ),
                    ),
                    Binary(
                        And,
                        Binary(
                            Eq,
                            Unary(
                                Sub,
                                Number(
                                    "1",
                                ),
                            ),
                            Binary(
                                Ge,
                                Number(
                                    "3",
                                ),
                                Number(
                                    "4",
                                ),
                            ),
                        ),
                        Binary(
                            Ne,
                            Number(
                                "5",
                            ),
                            Binary(
                                Sub,
                                Number(
                                    "6",
                                ),
                                Number(
                                    "1",
                                ),
                            ),
                        ),
                    ),
                ),
            ),
            Point(
                "a",
                Binary(
                    Or,
                    Binary(
                        And,
                        Binary(
                            Add,
                            Binary(
                                Div,
                                Number(
                                    "1",
                                ),
                                Number(
                                    "4",
                                ),
                            ),
                            Binary(
                                Mul,
                                Number(
                                    "8",
                                ),
                                Binary(
                                    Exp,
                                    Number(
                                        "5",
                                    ),
                                    Number(
                                        "2",
                                    ),
                                ),
                            ),
                        ),
                        Binary(
                            Eq,
                            Binary(
                                Le,
                                Number(
                                    "2",
                                ),
                                Number(
                                    "1",
                                ),
                            ),
                            Binary(
                                Add,
                                Binary(
                                    Exp,
                                    Number(
                                        "3",
                                    ),
                                    Number(
                                        "3",
                                    ),
                                ),
                                Number(
                                    "3",
                                ),
                            ),
                        ),
                    ),
                    Binary(
                        And,
                        Binary(
                            Eq,
                            Number(
                                "1",
                            ),
                            Binary(
                                Ge,
                                Number(
                                    "3",
                                ),
                                Number(
                                    "4",
                                ),
                            ),
                        ),
                        Binary(
                            Ne,
                            Number(
                                "5",
                            ),
                            Binary(
                                Sub,
                                Number(
                                    "6",
                                ),
                                Number(
                                    "1",
                                ),
                            ),
                        ),
                    ),
                ),
            ),
        ],
    ),
)